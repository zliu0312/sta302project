knitr::opts_chunk$set(echo = TRUE)
library(readr)
df <- read_csv("AirBnB.csv")
library(dplyr)
df <- read_csv("AirBnB.csv")
df <- df %>%
dplyr::select(
-host_id,
-host_name,
-host_since_year,
-host_since_anniversary,
-matches("Customer Since"),
-zipcode,
-id,
-city,
-state,
-country,
-latitude,
-longitude,
-matches("customers...50..review.rate"),
-number_of_reviews
)
df <- df %>%
rename(
age_of_exp = "Age in years",
total_revenue = "Total Rev",
rev_per_2_guest = "Daily Rev per 2 guests, unless limited to 1",
min_cost_per_night = "Min Nights",
neighbourhood = neighbourhood_cleansed,
city = city_translated,
state = state_translated,
)
df$total_revenue <- as.character(df$total_revenue)
df$total_revenue_clean <- gsub("[$,]", "", df$total_revenue)
df <- df[!is.na(suppressWarnings(as.numeric(df$total_revenue_clean))), ]
df$total_revenue_clean <- as.numeric(df$total_revenue_clean)
df$total_revenue <- NULL
df$log_total_revenue <- log(df$total_revenue_clean + 1)
df$rev_per_2_guest <- as.character(df$rev_per_2_guest)
df$rev_per_2_guest_clean <- gsub("[$,]", "", df$rev_per_2_guest)
df <- df[!is.na(suppressWarnings(as.numeric(df$rev_per_2_guest_clean))), ]
df$rev_per_2_guest_clean <- as.numeric(df$rev_per_2_guest_clean)
df$rev_per_2_guest <- NULL
df$host_response_rate <- as.character(df$host_response_rate)
df <- df[!is.na(suppressWarnings(as.numeric(df$host_response_rate))), ]
df$host_response_rate <- as.numeric(df$host_response_rate)
df$price <- as.character(df$price)
df$price <- as.numeric(gsub("[$[:space:]]", "", df$price))
df <- df[!is.na(suppressWarnings(as.numeric(df$price))), ]
df$price <- as.numeric(df$price)
df$log_price <- log(df$price + 1)
df$log_review_scores_value <- log(df$review_scores_value + 1)
df$log_age_of_exp <- log(df$age_of_exp + 1)
df$sqrt_age_of_exp <- sqrt(df$age_of_exp)
df$log_review_scores_rating <- log(df$review_scores_rating + 1)
df$log_accommodates <- log(df$accommodates + 1)
df$sqrt_accommodates <- sqrt(df$accommodates)
df$log_host_response_rate <- log(df$host_response_rate + 1)
df$minimum_nights <- as.numeric(gsub("[$[:space:]]", "", df$minimum_nights))
View(df)
pairs(~ total_revenue_clean + age_of_exp + price + review_scores_value + review_scores_rating, data = df,
main = "Scatterplot Matrix of AirBnB Variables", cex = 0.01)
pairs(~ log_total_revenue + age_of_exp + log_age_of_exp  + price + log_price + review_scores_value + log_review_scores_value, data = df,
main = "Scatterplot Matrix of AirBnB Variables", cex = 0.01)
pairs(~ total_revenue_clean + accommodates + host_response_rate, data = df,
main = "Scatterplot Matrix of AirBnB Variables", cex = 0.01)
pairs(~ log_total_revenue + accommodates + log_accommodates + sqrt_accommodates + host_response_rate + log_host_response_rate, data = df,
main = "Scatterplot Matrix of AirBnB Variables", cex = 0.01)
prelim_model <- lm(total_revenue_clean ~ age_of_exp + price + review_scores_value + host_response_rate + accommodates, data = df)
summary(prelim_model)
log_model <- lm(log_total_revenue ~ age_of_exp + log_price + review_scores_value + sqrt_accommodates + host_response_rate, data = df)
summary(log_model)
plot(prelim_model, which = 1, cex = 0.01)
plot(prelim_model, which = 2, cex=0.7)
plot(log_model, which = 1, cex = 0.01)
plot(log_model, which = 2, cex=0.7)
df_property_type <- df %>%
add_count(property_type) %>%
filter(n >= 10) %>%
select(-n)
boxplot(log_total_revenue ~ property_type, data = df_property_type,
main = "Log Revenue by Property Type",
ylab = "Log Total Revenue", las = 2, cex.axis = 0.7)
boxplot(log_total_revenue ~ room_type, data = df,
main = "Log Revenue by Room Type",
ylab = "Log Total Revenue", las = 2, cex.axis = 0.7)
boxplot(log_total_revenue ~ host_response_time, data = df,
main = "Log Revenue by host response time",
ylab = "Log Total Revenue", las = 2, cex.axis = 0.7)
df$property_type <- as.factor(df$room_type)
log_model_with_cat <- lm(
log_total_revenue ~ log_age_of_exp + log_price + review_scores_value + sqrt_accommodates + host_response_rate + room_type,
data = as.data.frame(df)
)
summary(log_model_with_cat)
plot(log_model_with_cat, which = 1, cex = 0.01)
plot(log_model_with_cat, which = 2, cex=0.7)
pairs(~ log_total_revenue + age_of_exp + sqrt_age_of_exp  + price + log_price + review_scores_value + log_review_scores_value, data = df,
main = "Scatterplot Matrix of AirBnB Variables", cex = 0.01)
pairs(~ total_revenue_clean + age_of_exp + price + review_scores_value + review_scores_rating, data = df,
main = "Scatterplot Matrix of AirBnB Variables", cex = 0.01)
pairs(~ log_total_revenue + age_of_exp + log_age_of_exp  + price + log_price + review_scores_value + log_review_scores_value, data = df,
main = "Scatterplot Matrix of AirBnB Variables", cex = 0.01)
log_model <- lm(log_total_revenue ~ log_age_of_exp + log_price + review_scores_value + sqrt_accommodates + host_response_rate, data = df)
summary(log_model)
plot(prelim_model, which = 1, cex = 0.1)
plot(log_model, which = 1, cex = 0.1)
log_model <- lm(log_total_revenue ~ log_age_of_exp + log_price + review_scores_value + sqrt_accommodates + host_response_rate, data = df)
summary(log_model)
plot(prelim_model, which = 1, cex = 0.1)
plot(prelim_model, which = 2, cex=0.7)
plot(log_model, which = 1, cex = 0.1)
plot(log_model, which = 2, cex=0.7)
df_property_type <- df %>%
add_count(property_type) %>%
filter(n >= 10) %>%
select(-n)
boxplot(log_total_revenue ~ property_type, data = df_property_type,
main = "Log Revenue by Property Type",
ylab = "Log Total Revenue", las = 2, cex.axis = 0.7)
boxplot(log_total_revenue ~ room_type, data = df,
main = "Log Revenue by Room Type",
ylab = "Log Total Revenue", las = 2, cex.axis = 0.7)
boxplot(log_total_revenue ~ host_response_time, data = df,
main = "Log Revenue by host response time",
ylab = "Log Total Revenue", las = 2, cex.axis = 0.7)
df$property_type <- as.factor(df$room_type)
log_model_with_cat <- lm(
log_total_revenue ~ log_age_of_exp + log_price + review_scores_value + sqrt_accommodates + host_response_rate + room_type,
data = as.data.frame(df)
)
summary(log_model_with_cat)
plot(log_model_with_cat, which = 1, cex = 0.01)
plot(log_model_with_cat, which = 2, cex=0.7)
plot(log_model_with_cat, which = 1, cex = 0.1)
plot(log_model_with_cat, which = 2, cex=0.7)
plot(log_model_with_cat, which = 1, cex = 0.05)
plot(log_model, which = 1, cex = 0.05)
